# Corrected docker-compose.yml WITHOUT port mappings
# Port mappings will be handled entirely by docker-compose.override.yml
# This prevents conflicts and allows the override to work properly

version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mixview_backend
    env_file: .env
    # NO ports section - will be defined in override file
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mixview-network
    environment:
      - DATABASE_URL=postgresql://mixview:mixviewpass@db:5432/mixview
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]  # Internal port 8000
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mixview_frontend
    # NO ports section - will be defined in override file
    environment:
      - VITE_BACKEND_URL=http://backend:8001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - mixview-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]  # Internal port 3000
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: mixview_db
    environment:
      POSTGRES_USER: mixview
      POSTGRES_PASSWORD: mixviewpass
      POSTGRES_DB: mixview
    # NO ports section - will be defined in override file
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mixview-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mixview -d mixview"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  pgdata:

networks:
  mixview-network:
    driver: bridge